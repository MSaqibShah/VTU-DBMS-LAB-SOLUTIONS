CREATE TABLE ACTOR(
ACT_ID int PRIMARY KEY,
ACT_NAME VARCHAR(20),
ACT_GENDER varCHAR(1)
);

CREATE TABLE DIRECTOR(
DIR_ID int PRIMARY KEY,
DIR_NAME VARCHAR(20),
DIR_PHONE int
);

CREATE TABLE MOVIES (
MOV_ID int PRIMARY KEY,
MOV_TITLE VARCHAR(25),
MOV_YEAR int,
MOV_LANG VARCHAR(12),
DIR_ID int,
FOREIGN KEY (DIR_ID) REFERENCES DIRECTOR (DIR_ID)
);

CREATE TABLE MOVIE_CAST(
ACT_ID int,
MOV_ID int,
ROLE VARCHAR(10),
PRIMARY KEY (ACT_ID, MOV_ID),
FOREIGN KEY (ACT_ID) REFERENCES ACTOR (ACT_ID),
FOREIGN KEY (MOV_ID) REFERENCES MOVIES (MOV_ID)
);


CREATE TABLE RATING(
MOV_ID int,
REV_STARS VARCHAR (25),
-- PRIMARY KEY(MOV_ID, REV_STARS),
FOREIGN KEY (MOV_ID) REFERENCES MOVIES (MOV_ID)
);


INSERT INTO ACTOR VALUES (301,'ANUSHKA','F');
INSERT INTO ACTOR VALUES (302,'PRABHAS','M');
INSERT INTO ACTOR VALUES (303,'PUNITH','M');
INSERT INTO ACTOR VALUES (304,'JERMY','M');

INSERT INTO DIRECTOR VALUES (60,'RAJAMOULI', 8751611);
INSERT INTO DIRECTOR VALUES (61,'HITCHCOCK', 7766131);
INSERT INTO DIRECTOR VALUES (62,'FARAN', 9986771);
INSERT INTO DIRECTOR VALUES (63,'STEVEN SPIELBERG', 8989770);

INSERT INTO MOVIES VALUES (1001,'BAHUBALI-2', 2017, 'TELAGU', 60);
INSERT INTO MOVIES VALUES (1002,'BAHUBALI-1', 2015, 'TELAGU', 60);
INSERT INTO MOVIES VALUES (1003,'AKASH', 2008, 'KANNADA', 61);
INSERT INTO MOVIES VALUES (1004,'WAR HORSE', 2011, 'ENGLISH', 63);

INSERT INTO MOVIE_CAST VALUES (301, 1002, 'HEROINE');
INSERT INTO MOVIE_CAST VALUES (301, 1001, 'HEROINE');
INSERT INTO MOVIE_CAST VALUES (303, 1003, 'HERO');
INSERT INTO MOVIE_CAST VALUES (303, 1002, 'GUEST');
INSERT INTO MOVIE_CAST VALUES (304, 1004, 'HERO');

INSERT INTO RATING VALUES (1001, 4);
INSERT INTO RATING VALUES (1002, 2);
INSERT INTO RATING VALUES (1003, 5);
INSERT INTO RATING VALUES (1004, 4);
INSERT INTO RATING VALUES (1004, 3);

-- ============ Q1
select m.MOV_TITLE
from MOVIES m, DIRECTOR d 
where m.DIR_ID = d.DIR_ID and d.DIR_NAME = 'Hitchcock';

-- ============ Q2
select m.MOV_TITLE
from movies m, movie_Cast mc
where m.MOV_ID = mc.MOV_ID and act_id in(
    select act_id
    from movie_Cast
    group by act_id 
    having count(act_id)>1
);

-- ============ Q3
select A.ACT_NAME, M.MOV_TITLE, M.MOV_YEAR
from actor A
join movie_Cast MC
on A.act_id = MC.act_id
join movies M
on M.MOV_ID = MC.MOV_ID
WHERE M.MOV_YEAR NOT BETWEEN 2000 AND 2015;

-- ============ Q4
SELECT MOV_TITLE, MAX(REV_STARS) 
FROM MOVIES
INNER JOIN RATING USING (MOV_ID)
GROUP BY MOV_TITLE HAVING MAX(REV_STARS)>0
ORDER BY MOV_TITLE; 

-- ============ Q5
update RATING
set REV_STARS = 5
where rating.MOV_ID in (
    select MOV_ID
    from movies m, DIRECTOR d 
    where m.DIR_ID = d.DIR_ID and DIR_NAME = 'STEVEN SPIELBERG'
);


