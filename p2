create table salesman(
    salesman_id int primary key,
    name varchar(20),
    city varchar(20),
    com varchar(20)
);

create table custumer(
    custumer_id int primary key,
    cust_name varchar(20),
    city varchar(20),
    grade int,
    salesman_id int,
    foreign key(salesman_id) references salesman(salesman_id) on delete set Null
);

create table orders(
    order_no int primary key,
    purchase_amt int,
    ord_date date,
    custumer_id int,
    salesman_id int,
    foreign key(custumer_id) references custumer(custumer_id) on delete cascade,
    foreign key(salesman_id) references salesman(salesman_id) on delete cascade
);

INSERT INTO SALESMAN VALUES (1000, 'JOHN','BANGALORE','25%'); 
INSERT INTO SALESMAN VALUES (2000, 'RAVI','BANGALORE','20%'); 
INSERT INTO SALESMAN VALUES (3000, 'KUMAR','MYSORE','15%'); 
INSERT INTO SALESMAN VALUES (4000, 'SMITH','DELHI','30%'); 
INSERT INTO SALESMAN VALUES (5000, 'HARSHA','HYDRABAD','15%');

INSERT INTO CUSTUMER VALUES (10, 'PREETHI','BANGALORE', 100, 1000);
INSERT INTO CUSTUMER VALUES (11, 'VIVEK','MANGALORE', 300, 1000);
INSERT INTO CUSTUMER VALUES (12, 'BHASKAR','CHENNAI', 400, 2000);
INSERT INTO CUSTUMER VALUES (13, 'CHETHAN','BANGALORE', 200, 2000);
INSERT INTO CUSTUMER VALUES (14, 'MAMATHA','BANGALORE', 400, 3000);

INSERT INTO ORDERS VALUES (50, 5000,'2017-05-04', 10, 1000);
INSERT INTO ORDERS VALUES (51, 450, '2017-01-20', 10, 2000);
INSERT INTO ORDERS VALUES (52, 1000, '2017-02-24', 13, 2000);
INSERT INTO ORDERS VALUES (53, 3500, '2017-04-13', 14, 3000);
INSERT INTO ORDERS VALUES (54, 550, '2017-03-09', 12, 2000);
INSERT INTO ORDERS VALUES (55, 600, '2017-03-09', 14, 3000);

-- -------------- q1
select grade, count(distinct custumer_id) as count
from custumer
group by grade
having grade > (
    select avg(grade) 
    from custumer
    where city = 'Bangalore'
);

-- -------------- q2
select distinct s.salesman_id, s.name
from custumer c, salesman s
where s.salesman_id = c.salesman_id and 
s.salesman_id in(
    select salesman_id 
    from custumer 
    group by salesman_id 
    having count(*)>1
    );

-- or

select s.salesman_id, s.name
from salesman s
where (
    select count(c.salesman_id)
    from custumer c
    where s.salesman_id = c.salesman_id
) >= 2;

-- -------------- q3
select s.salesman_id, s.name, c.cust_name, s.com
from salesman s, custumer c 
where s.city = c.city
UNION
select  s.salesman_id, s.name, 'No Match', s.com
from salesman s
where not s.city = any(select city from custumer) ORDER BY 2 DESC;

-- or

select s.salesman_id, s.name, c.cust_name, s.com
from salesman s, custumer c 
where s.city = c.city
UNION
select s.salesman_id, s.name, 'No Match', s.com
from salesman s, custumer c 
where not s.city = c.city ORDER BY 2 DESC;

-- -------------- q4
create view bestsalesman as 
SELECT O.ORD_DATE, S.SALESMAN_ID, S.NAME 
FROM SALESMAN S, ORDERS O
WHERE S.SALESMAN_ID = O.SALESMAN_ID
AND O.PURCHASE_AMT=(
    SELECT MAX(PURCHASE_AMT)
    FROM ORDERS Oi
    WHERE Oi.ORD_DATE = O.ORD_DATE
    );

-- or
create view bestsalesman as 
select o.ord_date,o.salesman_id, s.name
from orders o, salesman s 
where o.salesman_id = s.salesman_id and purchase_amt in(
    select max(purchase_amt)
    from ORDERS
    group by (ord_date)
    );

-- -------------- q5
delete from salesman 
where salesman_id = 1000;


